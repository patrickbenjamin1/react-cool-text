// MIXINS

//responsiveness
@mixin media-query($screen-width: $screen-size-phone) {
  @media screen and (max-width: $screen-width) {
    @content;
  }
}

@mixin screen-tablet() {
  @include media-query($screen-size-tablet) {
    @content;
  }
}

@mixin screen-phone() {
  @include media-query($screen-size-phone) {
    @content;
  }
}

@mixin screen-phone-tiny() {
  @include media-query($screen-size-tiny-phone) {
    @content;
  }
}

//layout
@mixin centre-content() {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin space-between-content() {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin centre-img() {
  object-fit: cover;
  object-position: center;
}

@mixin absolute-fill() {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

@mixin tidy-grid($min: 300px) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min, 1fr));
}

//sizes
@mixin square($size: 40px) {
  width: $size;
  height: $size;
}

@mixin fill() {
  width: 100%;
  height: 100%;
}

@mixin fill-screen() {
  width: 100vw;
  height: 100vh;
}

//transitions
@mixin stagger-transitions($child-class, $increments: 6, $stagger-time: 0.1s) {
  @for $i from 1 through $increments {
    #{$child-class}:nth-of-type(#{$i}) {
      transition-delay: calc(#{$i} * #{$stagger-time});
    }
  }
}

@mixin stagger-animations($child-class, $increments: 6, $stagger-time: 0.1s) {
  @for $i from 1 through $increments {
    #{$child-class}:nth-of-type(#{$i}) {
      animation-delay: calc(#{$i} * #{$stagger-time});
    }
  }
}

@mixin hover-opacity($hover-opacity: 0.5) {
  &:hover {
    opacity: $hover-opacity;
    @content;
  }
}

@mixin hover-bgcolor($color, $hover-color) {
  background-color: $color;

  &:hover {
    background-color: $hover-color;
    @content;
  }
}

@mixin hover-darken($color, $amount: 10%) {
  @include hover-bgcolor($color, darken($color, $amount));
}

//selectors
@mixin all-typography() {

  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  h6 {
    @content;
  }
}